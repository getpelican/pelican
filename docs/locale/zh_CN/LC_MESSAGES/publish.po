# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010–2024
# This file is distributed under the same license as the PELICAN package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
msgid ""
msgstr ""
"Project-Id-Version: PELICAN 4\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-06-24 19:06+0800\n"
"PO-Revision-Date: 2024-06-25 19:00+0800\n"
"Last-Translator: GeorgeHu <dhxxhch@163.com>\n"
"Language: zh_CN\n"
"Language-Team: \n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.15.0\n"

#: ../../publish.rst:2 65617cfb871b492589d55186b708a1ce
msgid "Publish your site"
msgstr "发布站点"

#: ../../publish.rst:7 dc4c9b1c1afd477d906b892dc592bdcd
msgid "Site generation"
msgstr "站点生成"

#: ../../publish.rst:9 610c37360e2b49ec8ea630ddc224d2b7
msgid ""
"Once Pelican is installed and you have some content (e.g., in Markdown or"
" reST format), you can convert your content into HTML via the ``pelican``"
" command, specifying the path to your content and (optionally) the path "
"to your :doc:`settings<settings>` file::"
msgstr ""
"您应该已经安装好Pelican并且已经创作了一些内容了吧（以Markdown或是reST格式），"
"现在就可以将这些内容通过 ``pelican`` 命令转换为HTML了，在转换时需要指定"
"创作内容存放的路径；如果有需要， :doc:`配置<settings>` 文件的路径也可单独指定："

#: ../../publish.rst:16 6f353c84f5204d2b84c49d1557010b19
msgid ""
"The above command will generate your site and save it in the ``output/`` "
"folder, using the default theme to produce a simple site. The default "
"theme consists of very simple HTML without styling and is provided so "
"folks may use it as a basis for creating their own themes."
msgstr ""
"上面的指令会在 ``output/`` 目录下生成站点，使用的是默认的主题。默认主题只使用"
"一些简单的HTML并且不包含样式，大家往往以这个简单主题为基础来创作自己的主题。"

#: ../../publish.rst:21 bb5064d57ed144e6b85d7d3d0938f91c
msgid ""
"You can also tell Pelican to watch for your modifications, instead of "
"manually re-running it every time you want to see your changes. To enable"
" this, run the ``pelican`` command with the ``-r`` or ``--autoreload`` "
"option. On non-Windows environments, this option can also be combined "
"with the ``-l`` or ``--listen`` option to simultaneously both auto-"
"regenerate *and* serve the output at http://localhost:8000::"
msgstr ""
"你也可以让Pelican来监听对源内容文件的修改，而不是在每次修改内容后重新手动执行命令"
"来生成站点。在执行 ``pelican`` 命令时，加上 ``-r`` 或者 ``--autoreload`` 选项"
"就可以做到这一点。在非Windows环境下，这个选项还可以和 ``-l`` 或 ``--listen`` "
"搭配使用，这样就可以在自动重生成站点的基础上，同时提供在 http://localhost:8000 "
"上的访问："

#: ../../publish.rst:30 40089a6762204e27bd16afaa038a8277
msgid ""
"Pelican has other command-line switches available. Have a look at the "
"help to see all the options you can use::"
msgstr ""
"Pelican还有一些其他的命令行选项。可以在帮助中看到所有可用选项："

#: ../../publish.rst:36 4484bb6f6e2b4bd49027c98be4fa2cd8
msgid "Viewing the generated files"
msgstr "浏览生成的文件"

#: ../../publish.rst:38 4dc83b844c964bcab17af21fabd5e6b2
msgid ""
"The files generated by Pelican are static files, so you don't actually "
"need anything special to view them. You can use your browser to open the "
"generated HTML files directly::"
msgstr ""
"Pelican生成的文件都是静态的，也就是说不需要使用什么特殊的手段就可以浏览。"
"您可以直接使用浏览器打开生成的HTML文件："

#: ../../publish.rst:44 c5774634f7da4f64bb7c7d0adbcdb65b
msgid ""
"Because the above method may have trouble locating your CSS and other "
"linked assets, running Pelican's simple built-in web server will often "
"provide a more reliable previewing experience::"
msgstr ""
"事实上，上面所说的直接打开的方式可能会使CSS或其他链接上出现问题，"
"可以运行Pelican自带的简易web服务器，如此便可以获得可靠的预览体验："

#: ../../publish.rst:50 b2eab6914b854b40bd769433fbad21b7
msgid ""
"Once the web server has been started, you can preview your site at: "
"http://localhost:8000/"
msgstr ""
"当web服务器启动后，可以访问 http://localhost:8000/ 来预览您的站点。"

#: ../../publish.rst:54 3b7344cad46a4dfaa01c067dd1f4009b
msgid "Deployment"
msgstr "部署"

#: ../../publish.rst:56 de2815c211b84291a985a1d808ffbfe7
msgid ""
"After you have generated your site, previewed it in your local "
"development environment, and are ready to deploy it to production, you "
"might first re-generate your site with any production-specific settings "
"(e.g., analytics, feeds, etc.) that you may have defined::"
msgstr ""
"当您生成好站点后，可以在本地先进行预览，确认无误后，在部署前可能还需使用"
"生产环境特定的配置文件重新生成站点："

#: ../../publish.rst:63 56e568114b72443ebcf1f741f07504dc
msgid ""
"To base your publish configuration on top of your ``pelicanconf.py``, you"
" can import your ``pelicanconf`` settings by including the following line"
" in your ``publishconf.py``::"
msgstr ""
"您可以基于 ``pelicanconf.py`` 进行设置文件的配置， 在 ``publishconf.py`` "
"中import ``pelicanconf`` 就可实现（译者注：配置文件其实本质上就是一些"
"Python变量，因此import后就可以全部引入）："

#: ../../publish.rst:69 b9e1243ed9ba409890d86ef8ff85499d
msgid ""
"If you have generated a ``publishconf.py`` using ``pelican-quickstart``, "
"this line is included by default."
msgstr ""
"如果 ``publishconf.py`` 是通过 ``pelican-quickstart`` 生成的，上面这行默认就有。"

#: ../../publish.rst:72 39671d42b0bb4c828fc51c63c351402c
msgid ""
"The steps for deploying your site will depend on where it will be hosted."
" If you have SSH access to a server running Nginx or Apache, you might "
"use the ``rsync`` tool to transmit your site files::"
msgstr ""
"部署站点的方法步骤取决于网站托管的位置。对于使用SSH访问的运行着Nginx或"
"Apache的服务器，您可能需要使用 ``rsync`` 工具来传输站点文件："

#: ../../publish.rst:78 523ed256e0164a968d8580310e4a9304
msgid ""
"There are many other deployment options, some of which can be configured "
"when first setting up your site via the ``pelican-quickstart`` command. "
"See the :doc:`Tips<tips>` page for detail on publishing via GitHub Pages."
msgstr ""
"还有很多其他的部署方式供您选择，有一些在第一次通过 ``pelican-quickstart`` "
"命令建立站点时就已经配置。在 :doc:`小技巧<tips>` 中可以查看如何通过"
"Github Pages部署站点。"

#: ../../publish.rst:83 c44ecc79922d419b8627706a6694dd8c
msgid "Automation"
msgstr "自动化"

#: ../../publish.rst:85 b892dcba14a84306aa6b39295b5f81e3
msgid ""
"While the ``pelican`` command is the canonical way to generate your site,"
" automation tools can be used to streamline the generation and "
"publication flow. One of the questions asked during the ``pelican-"
"quickstart`` process pertains to whether you want to automate site "
"generation and publication. If you answered \"yes\" to that question, a "
"``tasks.py`` and ``Makefile`` will be generated in the root of your "
"project. These files, pre-populated with certain information gleaned from"
" other answers provided during the ``pelican-quickstart`` process, are "
"meant as a starting point and should be customized to fit your particular"
" needs and usage patterns. If you find one or both of these automation "
"tools to be of limited utility, these files can be deleted at any time "
"and will not affect usage of the canonical ``pelican`` command."
msgstr ""
"``pelican`` 命令是生成站点的标准方法，但同时也有自动化工具可以用来简化生成与"
"发布流程。在 ``pelican-quickstart`` 的过程中，其中一个问题就是是否启用自动站点"
"生成与发布。若您选择了 “yes”，在项目的根目录中就会生成 ``tasks.py`` "
"和 ``Makefile`` 。这些文件中预填充了一些从 ``pelican-quickstart`` 过程中"
"收集的信息，您应该从这个生成好的文件出发，再根据实际需要进一步修改。"
"另外，如果您认为这些自动化脚本文件没什么用，完全可以将他们删除，这不会对标准命令 "
"``pelican`` 产生任何影响。"

#: ../../publish.rst:98 4c49ca3a24e3462a984dda738875ed4e
msgid ""
"Following are automation tools that \"wrap\" the ``pelican`` command and "
"can simplify the process of generating, previewing, and uploading your "
"site."
msgstr ""
"下面是一些自动化工具，其中包装了 ``pelican`` 命令，可以用于简化生成、预览和"
"上传站点的过程。"

#: ../../publish.rst:102 103fb7405038442aae62b62ea0fcdbe5
msgid "Invoke"
msgstr "Invoke"

#: ../../publish.rst:104 d3e46bf8da96489e923f6497e8932538
msgid ""
"The advantage of Invoke_ is that it is written in Python and thus can be "
"used in a wide range of environments. The downside is that it must be "
"installed separately. Use the following command to install Invoke, "
"prefixing with ``sudo`` if your environment requires it::"
msgstr ""
"Invoke_ 工具使用Python作为编程语言，并且能够用在很多不同的环境中。它需要使用"
"下面的命令单独安装，在某些操作系统中可能需要在前面加上 ``sudo`` ："

#: ../../publish.rst:111 786359d08e8f45598df7b1c45e32ca0a
msgid ""
"Take a moment to open the ``tasks.py`` file that was generated in your "
"project root. You will see a number of commands, any one of which can be "
"renamed, removed, and/or customized to your liking. Using the out-of-the-"
"box configuration, you can generate your site via::"
msgstr ""
"可以打开 ``tasks.py`` 文件看看其中的代码，可以尝试更改和删除其中的命令，"
"也可以按照您的喜好自行进行其他修改。生成好的文件是开箱即用的，您可以通过"
"下面的命令生成站点："

#: ../../publish.rst:118 ../../publish.rst:166 04c6045b58c24bc1a1fd594cdcf4ef5c
#: 1e9cf29276ec4446b1b0f4a55a1ef4b8
msgid ""
"If you'd prefer to have Pelican automatically regenerate your site every "
"time a change is detected (which is handy when testing locally), use the "
"following command instead::"
msgstr ""
"若您希望Pelican在检测到变化时自动重新生成站点（在本地测试的时候很实用），"
"可以使用下面的命令："

#: ../../publish.rst:124 ../../publish.rst:172 fabe0ce08eca4c5ebd9ca65898dab138
#: ff42351e29b944a59e8df22b1cbb20f5
msgid ""
"To serve the generated site so it can be previewed in your browser at "
"http://localhost:8000/::"
msgstr ""
"下面的命令则可以让您在生成后通过浏览器访问 http://localhost:8000/ 来预览站点"

#: ../../publish.rst:129 e1b12a6c64b246f89aea105b8d7febbc
msgid ""
"To serve the generated site with automatic browser reloading every time a"
" change is detected, first ``python -m pip install livereload``, then use"
" the following command::"
msgstr ""
"在每次检测到修改重生成站点后，可以让浏览器自动进行重载。先运行 "
"``python -m pip install livereload`` 安装，再运行下面的这条命令就可以实现："

#: ../../publish.rst:135 bf0d6c7770fe4a399b81b9ebdd48fa4e
msgid ""
"If during the ``pelican-quickstart`` process you answered \"yes\" when "
"asked whether you want to upload your site via SSH, you can use the "
"following command to publish your site via rsync over SSH::"
msgstr ""
"如果在 ``pelican-quickstart`` 过程中，对是否要通过SSH上传站点问题回答了“yes”，"
"您就可以使用下面的命令借助rsync在SSH上发布站点："

#: ../../publish.rst:141 9bea9f82ce164ee5ba07349a4c4d58ea
msgid ""
"These are just a few of the commands available by default, so feel free "
"to explore ``tasks.py`` and see what other commands are available. More "
"importantly, don't hesitate to customize ``tasks.py`` to suit your "
"specific needs and preferences."
msgstr ""
"默认就可以使用的命令远不止这些，在 ``tasks.py`` 中可以找到更多可用的命令。"
"更重要的是，当您有特定需求和偏好时，直接修改 ``tasks.py`` 即可。"

#: ../../publish.rst:147 06a6e7232c6243d79ab9f43ddc28590d
msgid "Make"
msgstr "Make"

#: ../../publish.rst:149 a2a5b589cf804fcd83ee2d0fbf98c12d
msgid ""
"A ``Makefile`` is also automatically created for you when you say \"yes\""
" to the relevant question during the ``pelican-quickstart`` process. The "
"advantage of this method is that the ``make`` command is built into most "
"POSIX systems and thus doesn't require installing anything else in order "
"to use it. The downside is that non-POSIX systems (e.g., Windows) do not "
"include ``make``, and installing it on those systems can be a non-trivial"
" task."
msgstr ""
"``Makefile`` 也是自动生成的。在大多数POSIX系统中都内置了 ``make`` 命令，"
"无需安装即可使用。但在非POSIX系统（例如Windows）中并没有 ``make`` ，在这些"
"系统中安装 ``make`` 则往往比较麻烦。"

#: ../../publish.rst:156 68c38c3eb34e4e6ca9cd4a2d3646d5cb
msgid ""
"If you want to use ``make`` to generate your site using the settings in "
"``pelicanconf.py``, run::"
msgstr ""
"使用 ``make`` 命令是以 ``pelicanconf.py`` 作为配置文件来生成站点的："

#: ../../publish.rst:161 133e6e1ebf92412a85eedbe56e0b91af
msgid ""
"To generate the site for production, using the settings in "
"``publishconf.py``, run::"
msgstr ""
"使用 ``publishconf.py`` 作为配置文件来为生产环境生成站点："

#: ../../publish.rst:177 f4e250949c2145ceb03b65c875767abc
msgid ""
"Normally you would need to run ``make regenerate`` and ``make serve`` in "
"two separate terminal sessions, but you can run both at once via::"
msgstr ""
"一般来说， ``make regenerate`` 和 ``make serve`` 需要在分别在单独的终端会话中"
"运行，下面的命令相当于同时运行上述两个命令："

#: ../../publish.rst:182 1f83bbcf60134eef959370bb5ca402d9
msgid ""
"The above command will simultaneously run Pelican in regeneration mode as"
" well as serve the output at http://localhost:8000."
msgstr ""
"上面的命令会让Pelican在重生成模式下持续运行，同样地，您可以通过 "
"http://localhost:8000 访问生成的站点。"

#: ../../publish.rst:185 9274a68b1e3b4639bf638a044eda613d
msgid ""
"When you're ready to publish your site, you can upload it via the "
"method(s) you chose during the ``pelican-quickstart`` questionnaire. For "
"this example, we'll use rsync over ssh::"
msgstr ""
"当准备好发布站点时，可以使用在 ``pelican-quickstart`` 过程中选择的方法进行上传。"
"下面的例子使用rsync在ssh上完成这一工作："

#: ../../publish.rst:191 9d7e7927c183491f981aacebe14e5bf1
msgid "That's it! Your site should now be live."
msgstr "OK！您的站点现在已经可以访问了。"

#: ../../publish.rst:193 8f570acd5f494f5b9645fdbca6db6fbb
msgid ""
"(The default ``Makefile`` and ``devserver.sh`` scripts use the ``python``"
" and ``pelican`` executables to complete its tasks. If you want to use "
"different executables, such as ``python3``, you can set the ``PY`` and "
"``PELICAN`` environment variables, respectively, to override the default "
"executable names.)"
msgstr ""
"（默认的 ``Makefile`` 和 ``devserver.sh`` 脚本执行 ``python`` 和 ``pelican`` "
"来完成任务。若您希望使用其他的可执行文件，例如 ``python3`` ，设置环境变量 ``PY`` "
"和 ``PELICAN`` 来覆盖默认的可执行文件名）"
